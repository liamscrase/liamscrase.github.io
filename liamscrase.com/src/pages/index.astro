---
import Header from "../components/Header.astro";
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<link rel="stylesheet" href="src/styles/styles.css" />
		<title>Astro</title>
		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		<link
			href="https://fonts.googleapis.com/css2?family=Chivo+Mono:ital,wght@0,100..900;1,100..900&family=Zalando+Sans:ital,wght@0,200..900;1,200..900&display=swap"
			rel="stylesheet"
		/>
	</head>
<body>
<Header />

<header>
	<section id="banner">
		<h1 id="banner-header"></h1>
	</section>
</header>
		<section id="projects">
			<h2>Projects</h2>
			<section id="project-list">
				<div class="project-card">
					<a
						class="project-image"
						href="https://staging.acmecars.co.nz/"
						><img src="src/images/acme5/acme5.webp" alt="" /></a
					>
					<div class="text">
						<h3>Acme Cars</h3>
						<p>
							Lorem ipsum dolor sit amet, consectetur adipiscing
							elit, sed do eiusmod tempor incididunt ut labore et
							dolore magna aliqua. Ut enim ad minim veniam, quis
							nostrud exercitation ullamco laboris nisi ut aliquip
							ex ea commodo consequat. Duis aute irure dolor in
							reprehenderit in voluptate velit esse cillum dolore
							eu fugiat nulla pariatur. Excepteur sint occaecat
							cupidatat non proident, sunt in culpa qui officia
							deserunt mollit anim id est laborum.
						</p>
						<a class="button" href="https://staging.acmecars.co.nz/"
							>View Project</a
						>
					</div>
				</div>
				<div class="project-card">
					<a
						class="project-image"
						href="https://staging.acmecars.co.nz/"
						><img src="src/images/acme5/acme5.webp" alt="" /></a
					>
					<div class="text">
						<h3>Acme Cars</h3>
						<p>
							Lorem ipsum dolor sit amet, consectetur adipiscing
							elit, sed do eiusmod tempor incididunt ut labore et
							dolore magna aliqua. Ut enim ad minim veniam, quis
							nostrud exercitation ullamco laboris nisi ut aliquip
							ex ea commodo consequat. Duis aute irure dolor in
							reprehenderit in voluptate velit esse cillum dolore
							eu fugiat nulla pariatur. Excepteur sint occaecat
							cupidatat non proident, sunt in culpa qui officia
							deserunt mollit anim id est laborum.
						</p>
						<a class="button" href="https://staging.acmecars.co.nz/"
							>View Project</a
						>
					</div>
				</div>
				<div class="project-card">
					<a
						class="project-image"
						href="https://staging.acmecars.co.nz/"
						><img src="src/images/acme5/acme5.webp" alt="" /></a
					>
					<div class="text">
						<h3>Acme Cars</h3>
						<p>
							Lorem ipsum dolor sit amet, consectetur adipiscing
							elit, sed do eiusmod tempor incididunt ut labore et
							dolore magna aliqua. Ut enim ad minim veniam, quis
							nostrud exercitation ullamco laboris nisi ut aliquip
							ex ea commodo consequat. Duis aute irure dolor in
							reprehenderit in voluptate velit esse cillum dolore
							eu fugiat nulla pariatur. Excepteur sint occaecat
							cupidatat non proident, sunt in culpa qui officia
							deserunt mollit anim id est laborum.
						</p>
						<a class="button" href="https://staging.acmecars.co.nz/"
							>View Project</a
						>
					</div>
				</div>
				<div class="project-card">
					<a
						class="project-image"
						href="https://staging.acmecars.co.nz/"
						><img src="src/images/acme5/acme5.webp" alt="" /></a
					>
					<div class="text">
						<h3>Acme Cars</h3>
						<p>
							Lorem ipsum dolor sit amet, consectetur adipiscing
							elit, sed do eiusmod tempor incididunt ut labore et
							dolore magna aliqua. Ut enim ad minim veniam, quis
							nostrud exercitation ullamco laboris nisi ut aliquip
							ex ea commodo consequat. Duis aute irure dolor in
							reprehenderit in voluptate velit esse cillum dolore
							eu fugiat nulla pariatur. Excepteur sint occaecat
							cupidatat non proident, sunt in culpa qui officia
							deserunt mollit anim id est laborum.
						</p>
						<a class="button" href="https://staging.acmecars.co.nz/"
							>View Project</a
						>
					</div>
				</div>
			</section>
		</section>
	</body>
</html>

          
<script>

	$(document).ready(function () {
		var stickyNav = $("header").outerHeight();
		
		$(window).scroll(function () {
			// Sticky navigation
			if ($(window).scrollTop() > stickyNav) {
				$("nav").addClass("scrolled");
			} else {
				$("nav").removeClass("scrolled");
			}
			
			// Text reveal animation
			$("#projects .text").each(function (i) {
				var bottom_of_object =
					$(this).offset().top + $(this).outerHeight() - 100;
				var bottom_of_window =
					$(window).scrollTop() + $(window).height();
				if (bottom_of_window > bottom_of_object) {
					$(this).addClass("text-reveal");
				}
			});
		});
	});
</script>


<script>

	/* ======= Config ======= */
	const roles = ["digital designer", "front-end developer", "problem-solver"];
	const typingSpeed = 80; // ms per character
	/* ====================== */

	const bannerHeader = document.getElementById("banner-header");

	/* Create one cursor element and reuse it */
	const cursor = document.createElement("span");
	cursor.className = "cursor";
	// Remove blinking for now; it will start later
	cursor.style.animation = "none";
	cursor.textContent = "|";

	/* Utility: position the cursor at the end of the content inside a line */
	function updateCursorPosition(lineEl, contentEl) {
		const contentRect = contentEl.getBoundingClientRect();
		const lineRect = lineEl.getBoundingClientRect();
		const left = contentRect.right - lineRect.left;
		const top = contentRect.top - lineRect.top;
		cursor.style.left = Math.round(left) + "px";
		cursor.style.top = Math.round(top) + "px";
	}

	/* Type a single role into `lineEl` (the line container). When done, call cb(). */
	function typeRole(role, lineEl, cb, isLastRole = false) {
		lineEl.style.position = lineEl.style.position || "relative";

		const content = document.createElement("span");
		content.className = "content";
		lineEl.appendChild(content);

		// Attach cursor (always visible)
		lineEl.appendChild(cursor);
		updateCursorPosition(lineEl, content);

		let i = 0;
		function step() {
			if (i < role.length) {
				content.textContent += role[i];
				i++;

				// Start blinking about 0.2 seconds before the last role finishes
				if (isLastRole && i >= role.length - 2) {
					cursor.style.animation = "blink 0.8s steps(1) infinite";
				}

				updateCursorPosition(lineEl, content);
				setTimeout(step, typingSpeed);
			} else {
				cb();
			}
		}

		step();
	}

	/* Create the new banner structure */
	function createBannerContent() {
		// Clear existing content
		bannerHeader.innerHTML = "";
		cursor.style.animation = "none";

		// Create first line: "Hey! I'm Liam"
		const line1 = document.createElement("div");
		line1.className = "line static-line";
		line1.textContent = "Hey! I'm Liam";
		bannerHeader.appendChild(line1);

		// Create second line with dynamic content
		const line2 = document.createElement("div");
		line2.className = "line dynamic-line";
		bannerHeader.appendChild(line2);

		// Create "a " prefix
		const prefix = document.createElement("span");
		prefix.textContent = "a ";
		prefix.className = "prefix";
		line2.appendChild(prefix);

		// Create dynamic content container
		const content = document.createElement("span");
		content.className = "content";
		line2.appendChild(content);

		// Attach cursor to the dynamic line
		line2.appendChild(cursor);
		line2.style.position = "relative";

		return { line2, content };
	}

	/* Animate cycling through roles */
	function animateRoles() {
		const { line2, content } = createBannerContent();
		let currentRoleIndex = 0;

		function typeCurrentRole() {
			const role = roles[currentRoleIndex];
			content.textContent = "";

			// Apply color class for current role
			content.className = `content role-${currentRoleIndex}`;
			cursor.className = `cursor role-${currentRoleIndex}`;

			updateCursorPosition(line2, content);

			let i = 0;
			function step() {
				if (i < role.length) {
					content.textContent += role[i];
					i++;

					// Apply background color when first character appears
					if (i === 1) {
						const header = document.querySelector("header");
						header.className = `bg-role-${currentRoleIndex}`;
					}

					updateCursorPosition(line2, content);
					setTimeout(step, typingSpeed);
				} else {
					// Role fully typed, wait then erase
					setTimeout(() => {
						eraseCurrentRole();
					}, 2000);
				}
			}
			step();
		}

		function eraseCurrentRole() {
			const currentText = content.textContent;
			let i = currentText.length;

			function eraseStep() {
				if (i > 0) {
					content.textContent = currentText.substring(0, i - 1);
					i--;
					updateCursorPosition(line2, content);
					setTimeout(eraseStep, typingSpeed / 2);
				} else {
					// Move to next role
					currentRoleIndex = (currentRoleIndex + 1) % roles.length;
					setTimeout(typeCurrentRole, 500);
				}
			}
			eraseStep();
		}

		// Start the animation
		typeCurrentRole();

		// Start cursor blinking
		setTimeout(() => {
			cursor.style.animation = "blink 0.8s steps(1) infinite";
		}, 1000);
	}

	/* Initialize the banner */
	function initBanner() {
		animateRoles();
	}

	initBanner();

	// Update cursor position when window resizes (for responsive font size changes)
	let currentContentEl = null;
	let currentLineEl = null;

	// Store references to current content and line elements
	function storeCurrentElements() {
		const lines = document.querySelectorAll("#banner-header .line");
		if (lines.length > 0) {
			currentLineEl = lines[lines.length - 1]; // Get the last line
			currentContentEl = currentLineEl.querySelector(".content");
		}
	}

	// Handle resize - update cursor position
	window.addEventListener("resize", function () {
		const dynamicLine = document.querySelector(".dynamic-line");
		const content = document.querySelector(".content");
		if (dynamicLine && content && cursor.parentNode) {
			updateCursorPosition(dynamicLine, content);
		}
	});

	// Update the typeRole function to store current elements
	const originalTypeRole = typeRole;
	typeRole = function (role, lineEl, cb, isLastRole = false) {
		currentLineEl = lineEl;
		return originalTypeRole(
			role,
			lineEl,
			function () {
				currentContentEl = lineEl.querySelector(".content");
				storeCurrentElements();
				cb();
			},
			isLastRole,
		);
	};

	</script>